head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2007.01.22.16.36.34;	author huseyiner;	state Exp;
branches;
next	;


desc
@@


1.1
log
@initial commit
@
text
@package com.turquaz.current.dal;

/************************************************************************/
/* TURQUAZ: Higly Modular Accounting/ERP Program                        */
/* ============================================                         */
/* Copyright (c) 2004 by Turquaz Software Development Group			    */
/*																		*/
/* This program is free software. You can redistribute it and/or modify */
/* it under the terms of the GNU General Public License as published by */
/* the Free Software Foundation; either version 2 of the License, or    */
/* (at your option) any later version.       							*/
/* 																		*/
/* This program is distributed in the hope that it will be useful,		*/
/* but WITHOUT ANY WARRANTY; without even the implied warranty of		*/
/* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the		*/
/* GNU General Public License for more details.         				*/
/************************************************************************/
/**
 * @@author Onsel Armagan
 * @@version $Id: CurDALCurrentCardUpdate.java,v 1.1 2005/07/02 16:07:08 onsel Exp $
 */
import java.util.List;
import org.hibernate.Hibernate;
import org.hibernate.Query;
import org.hibernate.Session;

import server.util.EngDALSessionFactory;

import com.turquaz.engine.dal.TurqCurrentTransaction;
import com.turquaz.engine.dal.TurqCurrentTransactionType;

public class CurDALCurrentCardUpdate
{
	public CurDALCurrentCardUpdate()
	{
	}

	public static List getCurrentGroups() throws Exception
	{
		try
		{
			Session session = EngDALSessionFactory.getSession();
			String query = "from TurqCurrentGroup as curGroup ";
			Query q = session.createQuery(query);
			List list = q.list();
			return list;
		}
		catch (Exception ex)
		{
			throw ex;
		}
	}

	public static List getCurrentTransactionBalances(TurqCurrentTransactionType type, Integer cardId) throws Exception
	{
		try
		{
			Session session = EngDALSessionFactory.getSession();
			String query = "select sum(trans.transactionsTotalDept),sum(trans.transactionsTotalCredit)"
					+ " from TurqCurrentTransaction as trans "
					+ "where trans.turqCurrentCard.id = :curCard and trans.turqCurrentTransactionType = :transType ";
			Query q = session.createQuery(query);
			q.setParameter("transType", type);
			q.setParameter("curCard", cardId);
			List list = q.list();
			return list;
		}
		catch (Exception ex)
		{
			throw ex;
		}
	}

	public static void initCurrentTrans(TurqCurrentTransaction curTrans) throws Exception
	{
		try
		{
			Session session = EngDALSessionFactory.getSession();
			session.refresh(curTrans);
			Hibernate.initialize(curTrans.getTurqEngineSequence().getTurqAccountingTransactions());
			Hibernate.initialize(curTrans.getTurqEngineSequence().getTurqCurrentTransactions());
		
		}
		catch (Exception ex)
		{
			throw ex;
		}
	}
}@
