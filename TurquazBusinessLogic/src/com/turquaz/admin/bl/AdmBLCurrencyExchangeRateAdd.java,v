head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2007.01.22.16.36.35;	author huseyiner;	state Exp;
branches;
next	;


desc
@@


1.1
log
@initial commit
@
text
@/*
 * Created on Feb 28, 2005
 *
 * 
 * Window - Preferences - Java - Code Style - Code Templates
 */
package com.turquaz.admin.bl;

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import com.turquaz.admin.dal.AdmDALCurrencyExchangeRateAdd;
import com.turquaz.engine.EngKeys;
import com.turquaz.engine.dal.EngDALCommon;
import com.turquaz.engine.dal.TurqCurrency;
import com.turquaz.engine.dal.TurqCurrencyExchangeRate;


/**
* This code was generated using CloudGarden's Jigloo
* SWT/Swing GUI Builder, which is free for non-commercial
* use. If Jigloo is being used commercially (ie, by a corporation,
* company or business for any purpose whatever) then you
* should purchase a license for each developer using Jigloo.
* Please visit www.cloudgarden.com for details.
* Use of Jigloo implies acceptance of these licensing terms.
* *************************************
* A COMMERCIAL LICENSE HAS NOT BEEN PURCHASED
* for this machine, so Jigloo or this code cannot be used legally
* for any corporate or commercial purpose.
* *************************************
*/
/**
 * @@author Cem 
 */
public class AdmBLCurrencyExchangeRateAdd
{
	public static void saveExchangeRate(HashMap argMap) throws Exception
	{
		
		
		Integer currencyId =(Integer)argMap.get(EngKeys.CURRENCY_ID);
		TurqCurrency exchangeCurrency=new TurqCurrency();
		exchangeCurrency.setId(currencyId);
		
		
		BigDecimal exchangeRatio=(BigDecimal)argMap.get(EngKeys.EXCHANGE_RATIO);
		Date exchangeDate=(Date)argMap.get(EngKeys.EXCHANGE_DATE);
		
		TurqCurrencyExchangeRate newExchangeRate = new TurqCurrencyExchangeRate();
		newExchangeRate.setExchangeRatio(exchangeRatio);
		newExchangeRate.setTurqCurrencyByExchangeCurrencyId(exchangeCurrency);
		newExchangeRate.setTurqCurrencyByBaseCurrencyId(EngDALCommon.getBaseCurrency());
		newExchangeRate.setExhangeRatesDate(exchangeDate);
		EngDALCommon.saveObject(newExchangeRate);
	}

	public static List getCurrencyExchangeRates() throws Exception
	{


			return AdmDALCurrencyExchangeRateAdd.getCurrencyExchangeRates();
	
	}
}@
