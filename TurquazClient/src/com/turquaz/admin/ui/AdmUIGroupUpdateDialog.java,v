head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2007.01.22.17.02.40;	author huseyiner;	state Exp;
branches;
next	;


desc
@@


1.1
log
@initial commit
@
text
@package com.turquaz.admin.ui;

import java.util.HashMap;
import com.cloudgarden.resource.SWTResourceManager;
import com.turquaz.admin.AdmKeys;
import com.turquaz.engine.interfaces.SaveDialogInterface;
import com.turquaz.engine.lang.EngLangCommonKeys;
import com.turquaz.engine.tx.EngTXCommon;
import com.turquaz.engine.ui.EngUICommon;
import com.turquaz.engine.ui.component.SaveDialogMenu;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.SWT;

import server.util.EngBLLogger;


/**
* This code was generated using CloudGarden's Jigloo
* SWT/Swing GUI Builder, which is free for non-commercial
* use. If Jigloo is being used commercially (ie, by a corporation,
* company or business for any purpose whatever) then you
* should purchase a license for each developer using Jigloo.
* Please visit www.cloudgarden.com for details.
* Use of Jigloo implies acceptance of these licensing terms.
* *************************************
* A COMMERCIAL LICENSE HAS NOT BEEN PURCHASED
* for this machine, so Jigloo or this code cannot be used legally
* for any corporate or commercial purpose.
* *************************************
*/
/**
 * @@author hakankaynar
 * 
 **/
public class AdmUIGroupUpdateDialog extends org.eclipse.swt.widgets.Dialog implements SaveDialogInterface
{
	private Shell dialogShell;
	private AdmUIGroupAdd compUserAdd;
	private Integer groupId;
	private boolean updated = false;
    private Object[]groupData;
    private SaveDialogMenu saveDialogMenu1;

	public AdmUIGroupUpdateDialog(Shell parent, int style, Object[] data)
	{
		super(parent, style);
		this.groupId = (Integer)data[2];
        groupData = data;
	}

	public boolean open()
	{
		try
		{
			Shell parent = getParent();
			dialogShell = new Shell(parent, SWT.DIALOG_TRIM | SWT.APPLICATION_MODAL | SWT.RESIZE | SWT.MAX);
			{
				//Register as a resource user - SWTResourceManager will
				//handle the obtaining and disposing of resources
				SWTResourceManager.registerResourceUser(dialogShell);
			}
			dialogShell.setLayout(new GridLayout());
			{
				GridData saveDialogMenu1LData = new GridData();
				saveDialogMenu1LData.grabExcessHorizontalSpace = true;
				saveDialogMenu1LData.horizontalAlignment = GridData.FILL;
				saveDialogMenu1 = new SaveDialogMenu(dialogShell, SWT.NONE,this);
				saveDialogMenu1.setLayoutData(saveDialogMenu1LData);
			}
			//START >> compUserAdd
			
				compUserAdd = new AdmUIGroupAdd(dialogShell, SWT.NONE);
			
			GridLayout compAddUserLayout = new GridLayout();
			GridData compAddUserLData = new GridData();
			compAddUserLData.grabExcessHorizontalSpace = true;
			compAddUserLData.grabExcessVerticalSpace = true;
			compAddUserLData.horizontalAlignment = GridData.FILL;
			compAddUserLData.verticalAlignment = GridData.FILL;
			compUserAdd.setLayoutData(compAddUserLData);
			compAddUserLayout.makeColumnsEqualWidth = true;
			//END << compUserAdd
			dialogShell.layout();
			dialogShell.pack();
			dialogShell.setSize(484, 270);
			dialogShell.open();
			Display display = dialogShell.getDisplay();
			PostInitGui();
			while (!dialogShell.isDisposed())
			{
				if (!display.readAndDispatch())
					display.sleep();
			}
			return updated;
		}
		catch (Exception e)
		{
            EngBLLogger.log(this.getClass(),e,getParent());
			return true;
		}
	}

	public void PostInitGui()
	{
		EngUICommon.centreWindow(dialogShell);
		
		compUserAdd.getTxtAdmGroupName().setText(groupData[0].toString());
		compUserAdd.getTxtAdmGroupDesc().setText(groupData[1].toString());
	}

	public void delete()
	{
		try
		{
			boolean delete = EngUICommon.okToDelete(this.getParent());  
			if (delete)
			{
				updated = true;
				HashMap argMap=new HashMap();
				argMap.put(AdmKeys.ADM_GROUP,groupData[2]); // group id 
				EngTXCommon.doTransactionTX("Adm_deleteGroup",argMap); 
				EngUICommon.showDeletedSuccesfullyMessage(getParent());
				this.dialogShell.close();
			}
		}
		catch (Exception ex)
		{
			EngBLLogger.log(getClass(),ex,getParent());
		}
	}

	public void save()
	{
		try
		{
			if (compUserAdd.verifyFields())
			{
				updated = true;
				
				HashMap argMap=new HashMap();
				argMap.put(AdmKeys.ADM_GROUP_ID,groupData[2]);
				argMap.put(AdmKeys.ADM_GROUP_NAME,compUserAdd.getTxtAdmGroupName().getText().trim());
				argMap.put(AdmKeys.ADM_GROUP_DESCRIPTION,compUserAdd.getTxtAdmGroupDesc().getText());
								
				EngTXCommon.doTransactionTX("Adm_updateGroup",argMap); //$NON-NLS-1$
				EngUICommon.showMessageBox(this.getParent(),EngLangCommonKeys.MSG_UPDATED_SUCCESS); //$NON-NLS-1$
				dialogShell.close();
			}
		}
		catch (Exception ex)
		{
            EngBLLogger.log(this.getClass(),ex,getParent());
		}
	}

	

	public void cancel() {
		dialogShell.close();
		
	}

	public String getSaveComposite() {
		
		return AdmUIGroupAdd.class.getName();
		
	}

	public void print() {
		// TODO Auto-generated method stub
		
	}
}@
