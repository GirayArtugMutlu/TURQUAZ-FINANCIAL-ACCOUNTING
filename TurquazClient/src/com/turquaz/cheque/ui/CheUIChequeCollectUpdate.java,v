head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2007.01.22.17.02.45;	author huseyiner;	state Exp;
branches;
next	;


desc
@@


1.1
log
@initial commit
@
text
@package com.turquaz.cheque.ui;

/************************************************************************/
/* TURQUAZ: Higly Modular Accounting/ERP Program                        */
/* ============================================                         */
/* Copyright (c) 2004 by Turquaz Software Development Group			    */
/*																		*/
/* This program is free software. You can redistribute it and/or modify */
/* it under the terms of the GNU General Public License as published by */
/* the Free Software Foundation; either version 2 of the License, or    */
/* (at your option) any later version.       							*/
/* 																		*/
/* This program is distributed in the hope that it will be useful,		*/
/* but WITHOUT ANY WARRANTY; without even the implied warranty of		*/
/* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the		*/
/* GNU General Public License for more details.         				*/
/************************************************************************/
/**
 * @@author Onsel
 * @@version $Id: CheUIChequeCollectUpdate.java,v 1.7 2005/08/26 15:51:08 onsel Exp $
 */
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;

import org.eclipse.swt.widgets.TableItem;
import org.eclipse.swt.layout.GridData;
import com.cloudgarden.resource.SWTResourceManager;
import com.turquaz.cash.CashKeys;
import com.turquaz.cheque.CheKeys;
import com.turquaz.common.HashBag;
import com.turquaz.engine.EngKeys;
import com.turquaz.engine.interfaces.SaveDialogInterface;
import com.turquaz.engine.lang.CheLangKeys;
import com.turquaz.engine.lang.EngLangCommonKeys;
import com.turquaz.engine.tx.EngTXCommon;
import com.turquaz.engine.ui.EngUICommon;
import com.turquaz.engine.ui.component.DatePicker;
import com.turquaz.engine.ui.component.SaveDialogMenu;
import com.turquaz.engine.ui.component.TurkishCurrencyFormat;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.SWT;

import server.util.EngBLLogger;


/**
* This code was generated using CloudGarden's Jigloo
* SWT/Swing GUI Builder, which is free for non-commercial
* use. If Jigloo is being used commercially (ie, by a corporation,
* company or business for any purpose whatever) then you
* should purchase a license for each developer using Jigloo.
* Please visit www.cloudgarden.com for details.
* Use of Jigloo implies acceptance of these licensing terms.
* *************************************
* A COMMERCIAL LICENSE HAS NOT BEEN PURCHASED
* for this machine, so Jigloo or this code cannot be used legally
* for any corporate or commercial purpose.
* *************************************
* 
*/
public class CheUIChequeCollectUpdate extends org.eclipse.swt.widgets.Dialog implements SaveDialogInterface
{
	private Shell dialogShell;
	private SaveDialogMenu saveDialogMenu1;
	private CheUIChequeCollect compChequeRoll;
	boolean isUpdated = false;
	Integer chequeRollId = null;

	public CheUIChequeCollectUpdate(Shell parent, int style, Integer chequeRollId)
	{
		super(parent, style);
		this.chequeRollId = chequeRollId;
	}

	public boolean open()
	{
		try
		{
			Shell parent = getParent();
			dialogShell = new Shell(parent, SWT.DIALOG_TRIM | SWT.APPLICATION_MODAL | SWT.RESIZE | SWT.MAX);
			{
				//Register as a resource user - SWTResourceManager will
				//handle the obtaining and disposing of resources
				SWTResourceManager.registerResourceUser(dialogShell);
			}
			dialogShell.setLayout(new GridLayout());
			dialogShell.layout();
			dialogShell.pack();
			dialogShell.setSize(654, 509);
			{
				GridData saveDialogMenu1LData = new GridData();
				saveDialogMenu1LData.grabExcessHorizontalSpace = true;
				saveDialogMenu1LData.horizontalAlignment = GridData.FILL;
				saveDialogMenu1 = new SaveDialogMenu(dialogShell, SWT.NONE,this);
				saveDialogMenu1.setLayoutData(saveDialogMenu1LData);
			}
			//START >> compChequeRoll
			
				compChequeRoll = new CheUIChequeCollect(dialogShell, SWT.NONE);
			GridData compChequeRollLData = new GridData();
			compChequeRollLData.grabExcessHorizontalSpace = true;
			compChequeRollLData.horizontalAlignment = GridData.FILL;
			compChequeRollLData.verticalAlignment = GridData.FILL;
			compChequeRollLData.grabExcessVerticalSpace = true;
			compChequeRoll.setLayoutData(compChequeRollLData);
			//END << compChequeRoll
			postInitGUI();
			dialogShell.open();
			Display display = dialogShell.getDisplay();
			while (!dialogShell.isDisposed())
			{
				if (!display.readAndDispatch())
					display.sleep();
			}
			return isUpdated;
		}
		catch (Exception e)
		{
            EngBLLogger.log(this.getClass(),e,getParent());
			return false;
		}
	}

	public void postInitGUI()
	{
		try
		{
			compChequeRoll.setChequeRollId(chequeRollId);
			compChequeRoll.getToolItemAdd().setEnabled(false);
		//	compChequeRoll.getToolItemDelete().setEnabled(false);
			EngUICommon.centreWindow(dialogShell);
			TurkishCurrencyFormat cf = new TurkishCurrencyFormat();
			
			HashMap argMap = new HashMap();
			argMap.put(CheKeys.CHE_CHEQUE_ROLL_ID,chequeRollId);
			HashBag infoBag = (HashBag)EngTXCommon.doSelectTX("Che_getChequeRollInfo",argMap);
			
			
			compChequeRoll.getTxtRollNo().setText(infoBag.get(EngKeys.DOCUMENT_NO).toString());
			compChequeRoll.getDatePicker1().setDate((Date)infoBag.get(EngKeys.DATE));
			TableItem item;
			
			
			
			HashMap chequeList =(HashMap)infoBag.get(CheKeys.CHE_CHEQUE_LIST);
			
		
			for(int i=0;i<chequeList.size();i++)
			{
				
				
				HashMap chequeInfo = (HashMap)chequeList.get(new Integer(i));
				
				compChequeRoll.cheques.add(chequeInfo);
				
				item = new TableItem(compChequeRoll.getTableCheques(), SWT.NULL);
				item.setData(chequeInfo);
				item.setText(new String[]{chequeInfo.get(CheKeys.CHE_PORTFOLIO_NO).toString(), DatePicker.formatter.format(chequeInfo.get(EngKeys.DATE)),
						chequeInfo.get(CheKeys.CHE_PAYMENT_PLACE).toString(), chequeInfo.get(CheKeys.CHE_DEBTOR).toString(), cf.format(chequeInfo.get(EngKeys.TOTAL_AMOUNT))});
			}
			
			compChequeRoll.getCashCardPcker().setText(infoBag.get(CashKeys.CASH_CARD_NAME).toString());
			
			compChequeRoll.calculateTotal();
		}
		catch (Exception ex)
		{
            EngBLLogger.log(this.getClass(),ex,getParent());
		}
	}

	public void save()
	{
		try
		{
			if (compChequeRoll.verifyFields())
			{
				List chequeList = new ArrayList();
				int count = compChequeRoll.getTableCheques().getItemCount();
				for (int i = 0; i < count; i++)
				{
					chequeList.add(compChequeRoll.getTableCheques().getItem(i).getData());
				}
				
				HashMap argMap = new HashMap();
				argMap.put(CheKeys.CHE_CHEQUE_ROLL_ID,chequeRollId);
				argMap.put(CashKeys.CASH_CARD_ID,compChequeRoll.getCashCardPcker().getCashCardId());
				argMap.put(EngKeys.DOCUMENT_NO,compChequeRoll.getTxtRollNo().getText().trim());
				argMap.put(EngKeys.DATE, compChequeRoll.getDatePicker1().getDate());
				argMap.put(CheKeys.CHE_CHEQUE_LIST,chequeList);
							
				EngTXCommon.doTransactionTX("Che_updateChequeCollectRoll",argMap) ;
			
				
				EngUICommon.showMessageBox(getParent(), EngLangCommonKeys.MSG_UPDATED_SUCCESS, SWT.ICON_INFORMATION); //$NON-NLS-1$
				isUpdated = true;
				dialogShell.close();
			}
		}
		catch (Exception ex)
		{
            EngBLLogger.log(this.getClass(),ex,getParent());
		}
	}

	public void delete()
	{
		try
		{
			if (EngUICommon.okToDelete(getParent()))
			{
				if (compChequeRoll.getTableCheques().getItemCount() > 0)
				{
					EngUICommon.showMessageBox(getParent(), CheLangKeys.MSG_CANNOT_DELETE_ROLLS_WITH_CHEQUE, SWT.ICON_WARNING); //$NON-NLS-1$
					return;
				}
				HashMap argMap = new HashMap();
				argMap.put(CheKeys.CHE_CHEQUE_ROLL_ID,chequeRollId);
				EngTXCommon.doTransactionTX("Che_deleteChequeRollIn",argMap);
			
				EngUICommon.showMessageBox(getParent(),EngLangCommonKeys.MSG_DELETED_SUCCESS, SWT.ICON_INFORMATION); //$NON-NLS-1$
				isUpdated = true;
				dialogShell.close();
			}
		}
		catch (Exception ex)
		{
            EngBLLogger.log(this.getClass(),ex,getParent());
		}
	}


	public void cancel() {
		dialogShell.close();
		
	}

	public String getSaveComposite() {
		return CheUIChequeCollect.class.getName();
	}

	public void print() {
		// TODO Auto-generated method stub
		
	}
}@
